@model List<TaskAnswer>

@using StudyProject.Models.Core;

@{
    ViewBag.Title = "Test";
    Layout = "~/Views/Shared/_MainLayout.cshtml";
    tbTest test = ViewBag.test;
    int timer = test.TimeOnTest * 60;
    List<tbTask> tasks = ViewBag.tasks;

}

<h2 class="text-center">Тест</h2>

<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-body">
                @if (timer != 0)
                {
                    <h4 id="timer" class="text-center">Часу залишилось: </h4>
                }
                @using (Html.BeginForm("Test", "Home", FormMethod.Post, new { @id = "fform" }))
                {
                    for (int i = 0; i < tasks.Count(); i++)
                    {
                        tbTask task = tasks.ElementAt(i);

                        <h5>Завдання: @task.Description</h5>
                        if (task.Type == (int)TaskStuff.TaskType.SelectCheckBox)
                        {

                            string type = "radio";

                            if (task.tbTaskVariant.Where(W => W.isRight).Count() > 1)
                            {
                                type = "checkbox";
                            }

                            for (int j = 0; j < task.tbTaskVariant.Count(); j++)
                            {
                                tbTaskVariant variant = task.tbTaskVariant.ElementAt(j);
                                <div class="ml-2 mt-1">
                                    <div class="form-group">
                                        @if (type.Equals("checkbox"))
                                        {
                                            @Html.CheckBoxFor(m => m[i].SelectedIds[j].isSelected) <label>@variant.Name</label>
                                        }
                                        else
                                        {
                                            @Html.RadioButtonFor(m => m[i].SelectedIds[j].isSelected, true) <label>@variant.Name</label>
                                        }
                                        @Html.HiddenFor(m => m[i].SelectedIds[j].idTaskVariant, htmlAttributes: new { @Value = variant.idTaskVariant })
                                        @Html.HiddenFor(m => m[i].idTask, htmlAttributes: new { @Value = variant.id_task })
                                    </div>
                                </div>
                            }
                        }
                        if (task.Type == (int)TaskStuff.TaskType.Input)
                        {

                            <div class="form-group mt-1">
                                @Html.TextAreaFor(m => m[i].answer, new { @class="form-control col-6"})
                                @Html.HiddenFor(m => m[i].idTask, htmlAttributes: new { @Value = task.idTask })
                            </div>
                        }
                        @Html.HiddenFor(m => m[i].idTest, htmlAttributes: new { @Value = test.idTest })


                    }
                    <input type="hidden" value="@test.idTest" name="idTest" />
                    <input onclick="submitForm()" class="btn btn-success mt-2" value="Завершити" />
                }
            </div>
        </div>
    </div>
</div>

@if (timer != 0)
{
    @section Scripts{
        <script>
            startday = new Date();
            clockStart = startday.getTime();

            var timerKey = 'timer' + '@test.idTest'

            if (localStorage.getItem(timerKey) !== null) {
                clockStart = localStorage.getItem(timerKey)
            } else {
                localStorage.setItem(timerKey, clockStart)
            }

            document.addEventListener("DOMContentLoaded", function (event) {
             var idInterval = setInterval(timer, 1000);

                function timer() {
                    var date = new Date()
                    var timeNow = date.getTime()
                    var timeDiff = timeNow - clockStart
                    var diffSecs = timeDiff / 1000;
                    var timeOnTest = @timer

                    var availableTime = timeOnTest - diffSecs

                    var hours = Math.floor(availableTime / 60 / 60);

                    var minutes = Math.floor(availableTime / 60) - (hours * 60);

                    var seconds = availableTime % 60;

                    if (diffSecs >= timeOnTest) {
                        clearInterval(idInterval)
                        submitForm()
                    } else {
                        var formatted = 'Часу залишилось: ' + hours + ' год. ' + minutes + ' мин. ' + Math.floor(seconds) + ' сек.'
                        $('#timer').text(formatted)
                    }
                }
            });


            function submitForm() {
                localStorage.clear()
                $('#fform').submit()
            }

        </script>
    }
}